/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * This file was generated by scripts/codegen.ts
 *
 * Original abi file:
 * - node_modules/@axelar-network/interchain-token-service/artifacts/contracts/interfaces/ITransmitInterchainToken.sol/ITransmitInterchainToken.json
 *
 * DO NOT EDIT MANUALLY
 */

import { encodeFunctionData } from "viem";

import ABI_FILE from "./ITransmitInterchainToken.abi";

export type ITransmitInterchainTokenTransmitInterchainTransferArgs = {
  tokenId: `0x${string}`;
  sourceAddress: `0x${string}`;
  destinationChain: string;
  destinationAddress: `0x${string}`;
  amount: bigint;
  metadata: `0x${string}`;
};

/**
 * Factory function for ITransmitInterchainToken.transmitInterchainTransfer function args
 */
export const encodeITransmitInterchainTokenTransmitInterchainTransferArgs = ({
  tokenId,
  sourceAddress,
  destinationChain,
  destinationAddress,
  amount,
  metadata,
}: ITransmitInterchainTokenTransmitInterchainTransferArgs) =>
  [
    tokenId,
    sourceAddress,
    destinationChain,
    destinationAddress,
    amount,
    metadata,
  ] as const;

/**
 * Encoder function for ITransmitInterchainToken.transmitInterchainTransfer function data
 */
export const encodeITransmitInterchainTokenTransmitInterchainTransferData = ({
  tokenId,
  sourceAddress,
  destinationChain,
  destinationAddress,
  amount,
  metadata,
}: ITransmitInterchainTokenTransmitInterchainTransferArgs): `0x${string}` =>
  encodeFunctionData({
    functionName: "transmitInterchainTransfer",
    abi: ABI_FILE.abi,
    args: [
      tokenId,
      sourceAddress,
      destinationChain,
      destinationAddress,
      amount,
      metadata,
    ],
  });

export const ITRANSMIT_INTERCHAIN_TOKEN_ENCODERS = {
  transmitInterchainTransfer: {
    args: encodeITransmitInterchainTokenTransmitInterchainTransferArgs,
    data: encodeITransmitInterchainTokenTransmitInterchainTransferData,
  },
};
