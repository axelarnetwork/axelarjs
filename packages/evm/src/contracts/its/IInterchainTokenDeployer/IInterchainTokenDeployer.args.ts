/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * This file was generated by scripts/codegen.ts
 *
 * Original abi file:
 * - node_modules/@axelar-network/interchain-token-service/artifacts/contracts/interfaces/IInterchainTokenDeployer.sol/IInterchainTokenDeployer.json
 *
 * DO NOT EDIT MANUALLY
 */

import { encodeFunctionData } from "viem";

import type { PublicContractClient } from "../../PublicContractClient";
import ABI_FILE from "./IInterchainTokenDeployer.abi";

export type IInterchainTokenDeployerDeployInterchainTokenArgs = {
  salt: `0x${string}`;
  tokenId: `0x${string}`;
  minter: `0x${string}`;
  name: string;
  symbol: string;
  decimals: number;
};

/**
 * Factory function for IInterchainTokenDeployer.deployInterchainToken function args
 */
export const encodeIInterchainTokenDeployerDeployInterchainTokenArgs = ({
  salt,
  tokenId,
  minter,
  name,
  symbol,
  decimals,
}: IInterchainTokenDeployerDeployInterchainTokenArgs) =>
  [salt, tokenId, minter, name, symbol, decimals] as const;

/**
 * Encoder function for IInterchainTokenDeployer.deployInterchainToken function data
 */
export const encodeIInterchainTokenDeployerDeployInterchainTokenData = ({
  salt,
  tokenId,
  minter,
  name,
  symbol,
  decimals,
}: IInterchainTokenDeployerDeployInterchainTokenArgs): `0x${string}` =>
  encodeFunctionData({
    functionName: "deployInterchainToken",
    abi: ABI_FILE.abi,
    args: [salt, tokenId, minter, name, symbol, decimals],
  });

export type IInterchainTokenDeployerDeployedAddressArgs = {
  salt: `0x${string}`;
};

/**
 * Factory function for IInterchainTokenDeployer.deployedAddress function args
 */
export const encodeIInterchainTokenDeployerDeployedAddressArgs = ({
  salt,
}: IInterchainTokenDeployerDeployedAddressArgs) => [salt] as const;

/**
 * Encoder function for IInterchainTokenDeployer.deployedAddress function data
 */
export const encodeIInterchainTokenDeployerDeployedAddressData = ({
  salt,
}: IInterchainTokenDeployerDeployedAddressArgs): `0x${string}` =>
  encodeFunctionData({
    functionName: "deployedAddress",
    abi: ABI_FILE.abi,
    args: [salt],
  });

export const IINTERCHAIN_TOKEN_DEPLOYER_ENCODERS = {
  deployInterchainToken: {
    args: encodeIInterchainTokenDeployerDeployInterchainTokenArgs,
    data: encodeIInterchainTokenDeployerDeployInterchainTokenData,
  },
  deployedAddress: {
    args: encodeIInterchainTokenDeployerDeployedAddressArgs,
    data: encodeIInterchainTokenDeployerDeployedAddressData,
  },
};

export function createIInterchainTokenDeployerReadClient(
  publicClient: PublicContractClient<typeof ABI_FILE.abi>
) {
  return {
    deployedAddress(
      deployedAddressArgs: IInterchainTokenDeployerDeployedAddressArgs
    ) {
      const encoder = IINTERCHAIN_TOKEN_DEPLOYER_ENCODERS["deployedAddress"];
      const encodedArgs = encoder.args(deployedAddressArgs);

      return publicClient.read("deployedAddress", { args: encodedArgs });
    },
  };
}
