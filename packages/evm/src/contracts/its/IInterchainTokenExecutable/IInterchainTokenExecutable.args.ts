/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * This file was generated by scripts/codegen.ts
 *
 * Original abi file:
 * - node_modules/@axelar-network/interchain-token-service/artifacts/contracts/interfaces/IInterchainTokenExecutable.sol/IInterchainTokenExecutable.json
 *
 * DO NOT EDIT MANUALLY
 */

import { encodeFunctionData } from "viem";

import ABI_FILE from "./IInterchainTokenExecutable.abi";

export type IInterchainTokenExecutableExecuteWithInterchainTokenArgs = {
  commandId: `0x${string}`;
  sourceChain: string;
  sourceAddress: `0x${string}`;
  data: `0x${string}`;
  tokenId: `0x${string}`;
  token: `0x${string}`;
  amount: bigint;
};

/**
 * Factory function for IInterchainTokenExecutable.executeWithInterchainToken function args
 */
export const encodeIInterchainTokenExecutableExecuteWithInterchainTokenArgs = ({
  commandId,
  sourceChain,
  sourceAddress,
  data,
  tokenId,
  token,
  amount,
}: IInterchainTokenExecutableExecuteWithInterchainTokenArgs) =>
  [
    commandId,
    sourceChain,
    sourceAddress,
    data,
    tokenId,
    token,
    amount,
  ] as const;

/**
 * Encoder function for IInterchainTokenExecutable.executeWithInterchainToken function data
 */
export const encodeIInterchainTokenExecutableExecuteWithInterchainTokenData = ({
  commandId,
  sourceChain,
  sourceAddress,
  data,
  tokenId,
  token,
  amount,
}: IInterchainTokenExecutableExecuteWithInterchainTokenArgs): `0x${string}` =>
  encodeFunctionData({
    functionName: "executeWithInterchainToken",
    abi: ABI_FILE.abi,
    args: [commandId, sourceChain, sourceAddress, data, tokenId, token, amount],
  });

export const IINTERCHAIN_TOKEN_EXECUTABLE_ENCODERS = {
  executeWithInterchainToken: {
    args: encodeIInterchainTokenExecutableExecuteWithInterchainTokenArgs,
    data: encodeIInterchainTokenExecutableExecuteWithInterchainTokenData,
  },
};
