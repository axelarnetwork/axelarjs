/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * This file was generated by scripts/codegen.ts
 *
 * Original abi file:
 * - node_modules/@axelar-network/interchain-token-service/artifacts/contracts/interfaces/IInterchainTokenExpressExecutable.sol/IInterchainTokenExpressExecutable.json
 *
 * DO NOT EDIT MANUALLY
 */

import { encodeFunctionData } from "viem";

import ABI_FILE from "./IInterchainTokenExpressExecutable.abi";

export type IInterchainTokenExpressExecutableExecuteWithInterchainTokenArgs = {
  sourceChain: string;
  sourceAddress: `0x${string}`;
  data: `0x${string}`;
  tokenId: `0x${string}`;
  token: `0x${string}`;
  amount: bigint;
};

/**
 * Factory function for IInterchainTokenExpressExecutable.executeWithInterchainToken function args
 */
export const encodeIInterchainTokenExpressExecutableExecuteWithInterchainTokenArgs =
  ({
    sourceChain,
    sourceAddress,
    data,
    tokenId,
    token,
    amount,
  }: IInterchainTokenExpressExecutableExecuteWithInterchainTokenArgs) =>
    [sourceChain, sourceAddress, data, tokenId, token, amount] as const;

/**
 * Encoder function for IInterchainTokenExpressExecutable.executeWithInterchainToken function data
 */
export const encodeIInterchainTokenExpressExecutableExecuteWithInterchainTokenData =
  ({
    sourceChain,
    sourceAddress,
    data,
    tokenId,
    token,
    amount,
  }: IInterchainTokenExpressExecutableExecuteWithInterchainTokenArgs): `0x${string}` =>
    encodeFunctionData({
      functionName: "executeWithInterchainToken",
      abi: ABI_FILE.abi,
      args: [sourceChain, sourceAddress, data, tokenId, token, amount],
    });

export type IInterchainTokenExpressExecutableExpressExecuteWithInterchainTokenArgs =
  {
    sourceChain: string;
    sourceAddress: `0x${string}`;
    data: `0x${string}`;
    tokenId: `0x${string}`;
    token: `0x${string}`;
    amount: bigint;
  };

/**
 * Factory function for IInterchainTokenExpressExecutable.expressExecuteWithInterchainToken function args
 */
export const encodeIInterchainTokenExpressExecutableExpressExecuteWithInterchainTokenArgs =
  ({
    sourceChain,
    sourceAddress,
    data,
    tokenId,
    token,
    amount,
  }: IInterchainTokenExpressExecutableExpressExecuteWithInterchainTokenArgs) =>
    [sourceChain, sourceAddress, data, tokenId, token, amount] as const;

/**
 * Encoder function for IInterchainTokenExpressExecutable.expressExecuteWithInterchainToken function data
 */
export const encodeIInterchainTokenExpressExecutableExpressExecuteWithInterchainTokenData =
  ({
    sourceChain,
    sourceAddress,
    data,
    tokenId,
    token,
    amount,
  }: IInterchainTokenExpressExecutableExpressExecuteWithInterchainTokenArgs): `0x${string}` =>
    encodeFunctionData({
      functionName: "expressExecuteWithInterchainToken",
      abi: ABI_FILE.abi,
      args: [sourceChain, sourceAddress, data, tokenId, token, amount],
    });

export const IINTERCHAIN_TOKEN_EXPRESS_EXECUTABLE_ENCODERS = {
  executeWithInterchainToken: {
    args: encodeIInterchainTokenExpressExecutableExecuteWithInterchainTokenArgs,
    data: encodeIInterchainTokenExpressExecutableExecuteWithInterchainTokenData,
  },
  expressExecuteWithInterchainToken: {
    args: encodeIInterchainTokenExpressExecutableExpressExecuteWithInterchainTokenArgs,
    data: encodeIInterchainTokenExpressExecutableExpressExecuteWithInterchainTokenData,
  },
};
