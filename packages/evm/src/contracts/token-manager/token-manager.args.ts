/* eslint-disable @typescript-eslint/no-explicit-any */
/**
 * This file was generated by scripts/codegen.cjs
 *
 * Original abi file:
 * - @axelar-network/interchain-token-service/dist/token-manager/TokenManager.sol/TokenManager.json
 *
 * DO NOT EDIT MANUALLY
 */

import { encodeFunctionData } from "viem";

import ABI_FILE from "./token-manager.abi";

export type TokenManagerCallContractWithInterchainTokenArgs = {
  destinationChain: string;
  destinationAddress: `0x${string}`;
  amount: bigint;
  data: `0x${string}`;
};

/**
 * Factory function for TokenManager.callContractWithInterchainToken function args
 */
export const encodeTokenManagerCallContractWithInterchainTokenArgs = ({
  destinationChain,
  destinationAddress,
  amount,
  data,
}: TokenManagerCallContractWithInterchainTokenArgs) =>
  [destinationChain, destinationAddress, amount, data] as const;

/**
 * Encoder function for TokenManager.callContractWithInterchainToken function data
 */
export const encodeTokenManagerCallContractWithInterchainTokenData = ({
  destinationChain,
  destinationAddress,
  amount,
  data,
}: TokenManagerCallContractWithInterchainTokenArgs) =>
  encodeFunctionData({
    functionName: "callContractWithInterchainToken",
    abi: ABI_FILE.abi,
    args: [destinationChain, destinationAddress, amount, data],
  });

export type TokenManagerGiveTokenArgs = {
  destinationAddress: `0x${string}`;
  amount: bigint;
};

/**
 * Factory function for TokenManager.giveToken function args
 */
export const encodeTokenManagerGiveTokenArgs = ({
  destinationAddress,
  amount,
}: TokenManagerGiveTokenArgs) => [destinationAddress, amount] as const;

/**
 * Encoder function for TokenManager.giveToken function data
 */
export const encodeTokenManagerGiveTokenData = ({
  destinationAddress,
  amount,
}: TokenManagerGiveTokenArgs) =>
  encodeFunctionData({
    functionName: "giveToken",
    abi: ABI_FILE.abi,
    args: [destinationAddress, amount],
  });

export type TokenManagerSendTokenArgs = {
  destinationChain: string;
  destinationAddress: `0x${string}`;
  amount: bigint;
  metadata: `0x${string}`;
};

/**
 * Factory function for TokenManager.sendToken function args
 */
export const encodeTokenManagerSendTokenArgs = ({
  destinationChain,
  destinationAddress,
  amount,
  metadata,
}: TokenManagerSendTokenArgs) =>
  [destinationChain, destinationAddress, amount, metadata] as const;

/**
 * Encoder function for TokenManager.sendToken function data
 */
export const encodeTokenManagerSendTokenData = ({
  destinationChain,
  destinationAddress,
  amount,
  metadata,
}: TokenManagerSendTokenArgs) =>
  encodeFunctionData({
    functionName: "sendToken",
    abi: ABI_FILE.abi,
    args: [destinationChain, destinationAddress, amount, metadata],
  });

export type TokenManagerSetFlowLimitArgs = { flowLimit: bigint };

/**
 * Factory function for TokenManager.setFlowLimit function args
 */
export const encodeTokenManagerSetFlowLimitArgs = ({
  flowLimit,
}: TokenManagerSetFlowLimitArgs) => [flowLimit] as const;

/**
 * Encoder function for TokenManager.setFlowLimit function data
 */
export const encodeTokenManagerSetFlowLimitData = ({
  flowLimit,
}: TokenManagerSetFlowLimitArgs) =>
  encodeFunctionData({
    functionName: "setFlowLimit",
    abi: ABI_FILE.abi,
    args: [flowLimit],
  });

export type TokenManagerSetOperatorArgs = { operator_: `0x${string}` };

/**
 * Factory function for TokenManager.setOperator function args
 */
export const encodeTokenManagerSetOperatorArgs = ({
  operator_,
}: TokenManagerSetOperatorArgs) => [operator_] as const;

/**
 * Encoder function for TokenManager.setOperator function data
 */
export const encodeTokenManagerSetOperatorData = ({
  operator_,
}: TokenManagerSetOperatorArgs) =>
  encodeFunctionData({
    functionName: "setOperator",
    abi: ABI_FILE.abi,
    args: [operator_],
  });

export type TokenManagerSetupArgs = { params: `0x${string}` };

/**
 * Factory function for TokenManager.setup function args
 */
export const encodeTokenManagerSetupArgs = ({
  params,
}: TokenManagerSetupArgs) => [params] as const;

/**
 * Encoder function for TokenManager.setup function data
 */
export const encodeTokenManagerSetupData = ({
  params,
}: TokenManagerSetupArgs) =>
  encodeFunctionData({
    functionName: "setup",
    abi: ABI_FILE.abi,
    args: [params],
  });

export type TokenManagerTransmitInterchainTransferArgs = {
  sender: `0x${string}`;
  destinationChain: string;
  destinationAddress: `0x${string}`;
  amount: bigint;
  metadata: `0x${string}`;
};

/**
 * Factory function for TokenManager.transmitInterchainTransfer function args
 */
export const encodeTokenManagerTransmitInterchainTransferArgs = ({
  sender,
  destinationChain,
  destinationAddress,
  amount,
  metadata,
}: TokenManagerTransmitInterchainTransferArgs) =>
  [sender, destinationChain, destinationAddress, amount, metadata] as const;

/**
 * Encoder function for TokenManager.transmitInterchainTransfer function data
 */
export const encodeTokenManagerTransmitInterchainTransferData = ({
  sender,
  destinationChain,
  destinationAddress,
  amount,
  metadata,
}: TokenManagerTransmitInterchainTransferArgs) =>
  encodeFunctionData({
    functionName: "transmitInterchainTransfer",
    abi: ABI_FILE.abi,
    args: [sender, destinationChain, destinationAddress, amount, metadata],
  });
