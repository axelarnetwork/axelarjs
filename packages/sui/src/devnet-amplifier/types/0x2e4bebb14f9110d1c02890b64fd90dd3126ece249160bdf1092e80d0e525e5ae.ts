/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

/* Generated types for 0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae, original address 0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae */

import { TypeDescriptor, ANY_TYPE } from "@typemove/move";
import { MoveCoder, TypedEventInstance } from "@typemove/sui";

import { defaultMoveCoder } from "@typemove/sui";

import {
  ZERO_ADDRESS,
  TypedDevInspectResults,
  getMoveCoder,
} from "@typemove/sui";
import {
  Transaction,
  TransactionArgument,
  TransactionObjectArgument,
} from "@mysten/sui/transactions";
import { SuiClient } from "@mysten/sui/client";
import {
  transactionArgumentOrObject,
  transactionArgumentOrVec,
  transactionArgumentOrPure,
  transactionArgumentOrPureU8,
  transactionArgumentOrPureU16,
  transactionArgumentOrPureU32,
  transactionArgumentOrPureU64,
  transactionArgumentOrPureU128,
  transactionArgumentOrPureU256,
  transactionArgumentOrPureBool,
  transactionArgumentOrPureString,
  transactionArgumentOrPureAddress,
} from "@typemove/sui";

import * as _0x1 from "@typemove/sui/builtin/0x1";
import * as _0x2 from "@typemove/sui/builtin/0x2";

export namespace version_control {
  export interface VersionControl {
    allowed_functions: _0x2.vec_set.VecSet<_0x1.ascii.String>[];
  }

  export namespace VersionControl {
    export const TYPE_QNAME =
      "0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae::version_control::VersionControl";

    const TYPE = new TypeDescriptor<VersionControl>(VersionControl.TYPE_QNAME);

    export function type(): TypeDescriptor<VersionControl> {
      return TYPE.apply();
    }
  }

  export type VersionControlInstance = TypedEventInstance<VersionControl> & {
    data_decoded: VersionControl;
    type_arguments: [];
  };

  export namespace builder {
    export function allowFunction(
      tx: Transaction,
      args: [
        string | TransactionObjectArgument | TransactionArgument,
        bigint | TransactionArgument,
        _0x1.ascii.String | TransactionArgument,
      ],
    ): TransactionArgument &
      [TransactionArgument, TransactionArgument, TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));
      _args.push(transactionArgumentOrPureU64(args[1], tx));
      _args.push(transactionArgumentOrPure(args[2], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae::version_control::allow_function",
        arguments: _args,
      });
    }
    export function allowedFunctions(
      tx: Transaction,
      args: [string | TransactionObjectArgument | TransactionArgument],
    ): TransactionArgument & [TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae::version_control::allowed_functions",
        arguments: _args,
      });
    }
    export function check(
      tx: Transaction,
      args: [
        string | TransactionObjectArgument | TransactionArgument,
        bigint | TransactionArgument,
        _0x1.ascii.String | TransactionArgument,
      ],
    ): TransactionArgument &
      [TransactionArgument, TransactionArgument, TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));
      _args.push(transactionArgumentOrPureU64(args[1], tx));
      _args.push(transactionArgumentOrPure(args[2], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae::version_control::check",
        arguments: _args,
      });
    }
    export function disallowFunction(
      tx: Transaction,
      args: [
        string | TransactionObjectArgument | TransactionArgument,
        bigint | TransactionArgument,
        _0x1.ascii.String | TransactionArgument,
      ],
    ): TransactionArgument &
      [TransactionArgument, TransactionArgument, TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));
      _args.push(transactionArgumentOrPureU64(args[1], tx));
      _args.push(transactionArgumentOrPure(args[2], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae::version_control::disallow_function",
        arguments: _args,
      });
    }
    export function latestVersion(
      tx: Transaction,
      args: [string | TransactionObjectArgument | TransactionArgument],
    ): TransactionArgument & [TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae::version_control::latest_version",
        arguments: _args,
      });
    }
    export function new$(
      tx: Transaction,
      args: [(string | TransactionObjectArgument)[] | TransactionArgument],
    ): TransactionArgument & [TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrVec(args[0], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae::version_control::new",
        arguments: _args,
      });
    }
    export function pushBack(
      tx: Transaction,
      args: [
        string | TransactionObjectArgument | TransactionArgument,
        (string | TransactionObjectArgument)[] | TransactionArgument,
      ],
    ): TransactionArgument & [TransactionArgument, TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));
      _args.push(transactionArgumentOrVec(args[1], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae::version_control::push_back",
        arguments: _args,
      });
    }
  }
  export namespace view {
    export async function allowFunction(
      client: SuiClient,
      args: [string, bigint, _0x1.ascii.String],
    ): Promise<TypedDevInspectResults<[]>> {
      const tx = new Transaction();
      builder.allowFunction(tx, args);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<[]>(
        inspectRes,
      );
    }
    export async function allowedFunctions(
      client: SuiClient,
      args: [string],
    ): Promise<TypedDevInspectResults<[string]>> {
      const tx = new Transaction();
      builder.allowedFunctions(tx, args);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<[string]>(
        inspectRes,
      );
    }
    export async function check(
      client: SuiClient,
      args: [string, bigint, _0x1.ascii.String],
    ): Promise<TypedDevInspectResults<[]>> {
      const tx = new Transaction();
      builder.check(tx, args);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<[]>(
        inspectRes,
      );
    }
    export async function disallowFunction(
      client: SuiClient,
      args: [string, bigint, _0x1.ascii.String],
    ): Promise<TypedDevInspectResults<[]>> {
      const tx = new Transaction();
      builder.disallowFunction(tx, args);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<[]>(
        inspectRes,
      );
    }
    export async function latestVersion(
      client: SuiClient,
      args: [string],
    ): Promise<TypedDevInspectResults<[bigint]>> {
      const tx = new Transaction();
      builder.latestVersion(tx, args);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<[bigint]>(
        inspectRes,
      );
    }
    export async function new$(
      client: SuiClient,
      args: [string[]],
    ): Promise<TypedDevInspectResults<[version_control.VersionControl]>> {
      const tx = new Transaction();
      builder.new$(tx, args);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<
        [version_control.VersionControl]
      >(inspectRes);
    }
    export async function pushBack(
      client: SuiClient,
      args: [string, string[]],
    ): Promise<TypedDevInspectResults<[]>> {
      const tx = new Transaction();
      builder.pushBack(tx, args);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<[]>(
        inspectRes,
      );
    }
  }
}

const MODULES = JSON.parse(
  '{"version_control":{"fileFormatVersion":6,"address":"0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae","name":"version_control","friends":[],"structs":{"VersionControl":{"abilities":{"abilities":["Copy","Drop","Store"]},"typeParameters":[],"fields":[{"name":"allowed_functions","type":{"Vector":{"Struct":{"address":"0x2","module":"vec_set","name":"VecSet","typeArguments":[{"Struct":{"address":"0x1","module":"ascii","name":"String","typeArguments":[]}}]}}}}]}},"exposedFunctions":{"allow_function":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae","module":"version_control","name":"VersionControl","typeArguments":[]}}},"U64",{"Struct":{"address":"0x1","module":"ascii","name":"String","typeArguments":[]}}],"return":[]},"allowed_functions":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae","module":"version_control","name":"VersionControl","typeArguments":[]}}}],"return":[{"MutableReference":{"Vector":{"Struct":{"address":"0x2","module":"vec_set","name":"VecSet","typeArguments":[{"Struct":{"address":"0x1","module":"ascii","name":"String","typeArguments":[]}}]}}}}]},"check":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Struct":{"address":"0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae","module":"version_control","name":"VersionControl","typeArguments":[]}}},"U64",{"Struct":{"address":"0x1","module":"ascii","name":"String","typeArguments":[]}}],"return":[]},"disallow_function":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae","module":"version_control","name":"VersionControl","typeArguments":[]}}},"U64",{"Struct":{"address":"0x1","module":"ascii","name":"String","typeArguments":[]}}],"return":[]},"latest_version":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Reference":{"Struct":{"address":"0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae","module":"version_control","name":"VersionControl","typeArguments":[]}}}],"return":["U64"]},"new":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"Vector":{"Vector":{"Struct":{"address":"0x1","module":"ascii","name":"String","typeArguments":[]}}}}],"return":[{"Struct":{"address":"0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae","module":"version_control","name":"VersionControl","typeArguments":[]}}]},"push_back":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae","module":"version_control","name":"VersionControl","typeArguments":[]}}},{"Vector":{"Struct":{"address":"0x1","module":"ascii","name":"String","typeArguments":[]}}}],"return":[]}}}}',
);

export function loadAllTypes(coder: MoveCoder) {
  _0x1.loadAllTypes(coder);
  _0x2.loadAllTypes(coder);
  for (const m of Object.values(MODULES)) {
    coder.load(
      m as any,
      "0x2e4bebb14f9110d1c02890b64fd90dd3126ece249160bdf1092e80d0e525e5ae",
    );
  }
}

loadAllTypes(defaultMoveCoder());
