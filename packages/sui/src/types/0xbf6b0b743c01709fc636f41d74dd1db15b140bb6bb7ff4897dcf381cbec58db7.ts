/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

/* Generated types for 0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7, original address 0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7 */

import { TypeDescriptor, ANY_TYPE } from "@typemove/move";
import { MoveCoder, TypedEventInstance } from "@typemove/sui";

import { defaultMoveCoder } from "@typemove/sui";

import {
  ZERO_ADDRESS,
  TypedDevInspectResults,
  getMoveCoder,
} from "@typemove/sui";
import {
  Transaction,
  TransactionArgument,
  TransactionObjectArgument,
} from "@mysten/sui/transactions";
import { SuiClient } from "@mysten/sui/client";
import {
  transactionArgumentOrObject,
  transactionArgumentOrVec,
  transactionArgumentOrPure,
  transactionArgumentOrPureU8,
  transactionArgumentOrPureU16,
  transactionArgumentOrPureU32,
  transactionArgumentOrPureU64,
  transactionArgumentOrPureU128,
  transactionArgumentOrPureU256,
  transactionArgumentOrPureBool,
  transactionArgumentOrPureString,
  transactionArgumentOrPureAddress,
} from "@typemove/sui";

import * as _0x2 from "@typemove/sui/builtin/0x2";
import * as _0x1 from "@typemove/sui/builtin/0x1";

export namespace operators {
  export interface Borrow {
    id: _0x2.object$.ID;
  }

  export namespace Borrow {
    export const TYPE_QNAME =
      "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::Borrow";

    const TYPE = new TypeDescriptor<Borrow>(Borrow.TYPE_QNAME);

    export function type(): TypeDescriptor<Borrow> {
      return TYPE.apply();
    }
  }

  export interface CapabilityRemoved {
    cap_id: _0x2.object$.ID;
    cap_name: _0x1.ascii.String;
  }

  export namespace CapabilityRemoved {
    export const TYPE_QNAME =
      "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::CapabilityRemoved";

    const TYPE = new TypeDescriptor<CapabilityRemoved>(
      CapabilityRemoved.TYPE_QNAME,
    );

    export function type(): TypeDescriptor<CapabilityRemoved> {
      return TYPE.apply();
    }
  }

  export type CapabilityRemovedInstance =
    TypedEventInstance<CapabilityRemoved> & {
      data_decoded: CapabilityRemoved;
      type_arguments: [];
    };

  export interface CapabilityStored {
    cap_id: _0x2.object$.ID;
    cap_name: _0x1.ascii.String;
  }

  export namespace CapabilityStored {
    export const TYPE_QNAME =
      "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::CapabilityStored";

    const TYPE = new TypeDescriptor<CapabilityStored>(
      CapabilityStored.TYPE_QNAME,
    );

    export function type(): TypeDescriptor<CapabilityStored> {
      return TYPE.apply();
    }
  }

  export type CapabilityStoredInstance =
    TypedEventInstance<CapabilityStored> & {
      data_decoded: CapabilityStored;
      type_arguments: [];
    };

  export interface OperatorAdded {
    operator: string;
  }

  export namespace OperatorAdded {
    export const TYPE_QNAME =
      "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::OperatorAdded";

    const TYPE = new TypeDescriptor<OperatorAdded>(OperatorAdded.TYPE_QNAME);

    export function type(): TypeDescriptor<OperatorAdded> {
      return TYPE.apply();
    }
  }

  export type OperatorAddedInstance = TypedEventInstance<OperatorAdded> & {
    data_decoded: OperatorAdded;
    type_arguments: [];
  };

  export interface OperatorCap {
    id: _0x2.object$.UID;
  }

  export namespace OperatorCap {
    export const TYPE_QNAME =
      "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::OperatorCap";

    const TYPE = new TypeDescriptor<OperatorCap>(OperatorCap.TYPE_QNAME);

    export function type(): TypeDescriptor<OperatorCap> {
      return TYPE.apply();
    }
  }

  export interface OperatorRemoved {
    operator: string;
  }

  export namespace OperatorRemoved {
    export const TYPE_QNAME =
      "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::OperatorRemoved";

    const TYPE = new TypeDescriptor<OperatorRemoved>(
      OperatorRemoved.TYPE_QNAME,
    );

    export function type(): TypeDescriptor<OperatorRemoved> {
      return TYPE.apply();
    }
  }

  export type OperatorRemovedInstance = TypedEventInstance<OperatorRemoved> & {
    data_decoded: OperatorRemoved;
    type_arguments: [];
  };

  export interface Operators {
    id: _0x2.object$.UID;
    operators: _0x2.vec_set.VecSet<string>;
    caps: _0x2.bag.Bag;
  }

  export namespace Operators {
    export const TYPE_QNAME =
      "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::Operators";

    const TYPE = new TypeDescriptor<Operators>(Operators.TYPE_QNAME);

    export function type(): TypeDescriptor<Operators> {
      return TYPE.apply();
    }
  }

  export interface OwnerCap {
    id: _0x2.object$.UID;
  }

  export namespace OwnerCap {
    export const TYPE_QNAME =
      "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::OwnerCap";

    const TYPE = new TypeDescriptor<OwnerCap>(OwnerCap.TYPE_QNAME);

    export function type(): TypeDescriptor<OwnerCap> {
      return TYPE.apply();
    }
  }

  export namespace builder {
    export function addOperator(
      tx: Transaction,
      args: [
        string | TransactionObjectArgument | TransactionArgument,
        string | TransactionObjectArgument | TransactionArgument,
        string | TransactionArgument,
      ],
    ): TransactionArgument &
      [TransactionArgument, TransactionArgument, TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));
      _args.push(transactionArgumentOrObject(args[1], tx));
      _args.push(transactionArgumentOrPureAddress(args[2], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::add_operator",
        arguments: _args,
      });
    }
    export function loanCap<T0 = any>(
      tx: Transaction,
      args: [
        string | TransactionObjectArgument | TransactionArgument,
        string | TransactionObjectArgument | TransactionArgument,
        _0x2.object$.ID | TransactionArgument,
      ],
      typeArguments: [TypeDescriptor<T0> | string],
    ): TransactionArgument &
      [TransactionArgument, TransactionArgument, TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));
      _args.push(transactionArgumentOrObject(args[1], tx));
      _args.push(transactionArgumentOrPure(args[2], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::loan_cap",
        arguments: _args,
        typeArguments: [
          typeof typeArguments[0] === "string"
            ? typeArguments[0]
            : typeArguments[0].getSignature(),
        ],
      });
    }
    export function removeCap<T0 = any>(
      tx: Transaction,
      args: [
        string | TransactionObjectArgument | TransactionArgument,
        string | TransactionObjectArgument | TransactionArgument,
        _0x2.object$.ID | TransactionArgument,
      ],
      typeArguments: [TypeDescriptor<T0> | string],
    ): TransactionArgument &
      [TransactionArgument, TransactionArgument, TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));
      _args.push(transactionArgumentOrObject(args[1], tx));
      _args.push(transactionArgumentOrPure(args[2], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::remove_cap",
        arguments: _args,
        typeArguments: [
          typeof typeArguments[0] === "string"
            ? typeArguments[0]
            : typeArguments[0].getSignature(),
        ],
      });
    }
    export function removeOperator(
      tx: Transaction,
      args: [
        string | TransactionObjectArgument | TransactionArgument,
        string | TransactionObjectArgument | TransactionArgument,
        string | TransactionArgument,
      ],
    ): TransactionArgument &
      [TransactionArgument, TransactionArgument, TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));
      _args.push(transactionArgumentOrObject(args[1], tx));
      _args.push(transactionArgumentOrPureAddress(args[2], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::remove_operator",
        arguments: _args,
      });
    }
    export function restoreCap<T0 = any>(
      tx: Transaction,
      args: [
        string | TransactionObjectArgument | TransactionArgument,
        string | TransactionObjectArgument | TransactionArgument,
        T0 | TransactionArgument,
        operators.Borrow | TransactionArgument,
      ],
      typeArguments: [TypeDescriptor<T0> | string],
    ): TransactionArgument &
      [
        TransactionArgument,
        TransactionArgument,
        TransactionArgument,
        TransactionArgument,
      ] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));
      _args.push(transactionArgumentOrObject(args[1], tx));
      _args.push(transactionArgumentOrPure(args[2], tx));
      _args.push(transactionArgumentOrPure(args[3], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::restore_cap",
        arguments: _args,
        typeArguments: [
          typeof typeArguments[0] === "string"
            ? typeArguments[0]
            : typeArguments[0].getSignature(),
        ],
      });
    }
    export function storeCap<T0 = any>(
      tx: Transaction,
      args: [
        string | TransactionObjectArgument | TransactionArgument,
        string | TransactionObjectArgument | TransactionArgument,
        T0 | TransactionArgument,
      ],
      typeArguments: [TypeDescriptor<T0> | string],
    ): TransactionArgument &
      [TransactionArgument, TransactionArgument, TransactionArgument] {
      const _args: any[] = [];
      _args.push(transactionArgumentOrObject(args[0], tx));
      _args.push(transactionArgumentOrObject(args[1], tx));
      _args.push(transactionArgumentOrPure(args[2], tx));

      // @ts-ignore
      return tx.moveCall({
        target:
          "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7::operators::store_cap",
        arguments: _args,
        typeArguments: [
          typeof typeArguments[0] === "string"
            ? typeArguments[0]
            : typeArguments[0].getSignature(),
        ],
      });
    }
  }
  export namespace view {
    export async function addOperator(
      client: SuiClient,
      args: [string, string, string],
    ): Promise<TypedDevInspectResults<[]>> {
      const tx = new Transaction();
      builder.addOperator(tx, args);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<[]>(
        inspectRes,
      );
    }
    export async function loanCap<T0 = any>(
      client: SuiClient,
      args: [string, string, _0x2.object$.ID],
      typeArguments: [TypeDescriptor<T0> | string],
    ): Promise<TypedDevInspectResults<[T0, operators.Borrow]>> {
      const tx = new Transaction();
      builder.loanCap(tx, args, typeArguments);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<
        [T0, operators.Borrow]
      >(inspectRes);
    }
    export async function removeCap<T0 = any>(
      client: SuiClient,
      args: [string, string, _0x2.object$.ID],
      typeArguments: [TypeDescriptor<T0> | string],
    ): Promise<TypedDevInspectResults<[T0]>> {
      const tx = new Transaction();
      builder.removeCap(tx, args, typeArguments);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<[T0]>(
        inspectRes,
      );
    }
    export async function removeOperator(
      client: SuiClient,
      args: [string, string, string],
    ): Promise<TypedDevInspectResults<[]>> {
      const tx = new Transaction();
      builder.removeOperator(tx, args);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<[]>(
        inspectRes,
      );
    }
    export async function restoreCap<T0 = any>(
      client: SuiClient,
      args: [string, string, T0, operators.Borrow],
      typeArguments: [TypeDescriptor<T0> | string],
    ): Promise<TypedDevInspectResults<[]>> {
      const tx = new Transaction();
      builder.restoreCap(tx, args, typeArguments);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<[]>(
        inspectRes,
      );
    }
    export async function storeCap<T0 = any>(
      client: SuiClient,
      args: [string, string, T0],
      typeArguments: [TypeDescriptor<T0> | string],
    ): Promise<TypedDevInspectResults<[]>> {
      const tx = new Transaction();
      builder.storeCap(tx, args, typeArguments);
      const inspectRes = await client.devInspectTransactionBlock({
        transactionBlock: tx,
        sender: ZERO_ADDRESS,
      });

      return (await getMoveCoder(client)).decodeDevInspectResult<[]>(
        inspectRes,
      );
    }
  }
}

const MODULES = JSON.parse(
  '{"operators":{"fileFormatVersion":6,"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","name":"operators","friends":[],"structs":{"Borrow":{"abilities":{"abilities":[]},"typeParameters":[],"fields":[{"name":"id","type":{"Struct":{"address":"0x2","module":"object","name":"ID","typeArguments":[]}}}]},"CapabilityRemoved":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"cap_id","type":{"Struct":{"address":"0x2","module":"object","name":"ID","typeArguments":[]}}},{"name":"cap_name","type":{"Struct":{"address":"0x1","module":"ascii","name":"String","typeArguments":[]}}}]},"CapabilityStored":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"cap_id","type":{"Struct":{"address":"0x2","module":"object","name":"ID","typeArguments":[]}}},{"name":"cap_name","type":{"Struct":{"address":"0x1","module":"ascii","name":"String","typeArguments":[]}}}]},"OperatorAdded":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"operator","type":"Address"}]},"OperatorCap":{"abilities":{"abilities":["Store","Key"]},"typeParameters":[],"fields":[{"name":"id","type":{"Struct":{"address":"0x2","module":"object","name":"UID","typeArguments":[]}}}]},"OperatorRemoved":{"abilities":{"abilities":["Copy","Drop"]},"typeParameters":[],"fields":[{"name":"operator","type":"Address"}]},"Operators":{"abilities":{"abilities":["Key"]},"typeParameters":[],"fields":[{"name":"id","type":{"Struct":{"address":"0x2","module":"object","name":"UID","typeArguments":[]}}},{"name":"operators","type":{"Struct":{"address":"0x2","module":"vec_set","name":"VecSet","typeArguments":["Address"]}}},{"name":"caps","type":{"Struct":{"address":"0x2","module":"bag","name":"Bag","typeArguments":[]}}}]},"OwnerCap":{"abilities":{"abilities":["Store","Key"]},"typeParameters":[],"fields":[{"name":"id","type":{"Struct":{"address":"0x2","module":"object","name":"UID","typeArguments":[]}}}]}},"exposedFunctions":{"add_operator":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"Operators","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"OwnerCap","typeArguments":[]}}},"Address",{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[]},"loan_cap":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":["Store","Key"]}],"parameters":[{"MutableReference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"Operators","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"OperatorCap","typeArguments":[]}}},{"Struct":{"address":"0x2","module":"object","name":"ID","typeArguments":[]}},{"MutableReference":{"Struct":{"address":"0x2","module":"tx_context","name":"TxContext","typeArguments":[]}}}],"return":[{"TypeParameter":0},{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"Borrow","typeArguments":[]}}]},"remove_cap":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":["Store","Key"]}],"parameters":[{"MutableReference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"Operators","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"OwnerCap","typeArguments":[]}}},{"Struct":{"address":"0x2","module":"object","name":"ID","typeArguments":[]}}],"return":[{"TypeParameter":0}]},"remove_operator":{"visibility":"Public","isEntry":false,"typeParameters":[],"parameters":[{"MutableReference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"Operators","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"OwnerCap","typeArguments":[]}}},"Address"],"return":[]},"restore_cap":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":["Store","Key"]}],"parameters":[{"MutableReference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"Operators","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"OperatorCap","typeArguments":[]}}},{"TypeParameter":0},{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"Borrow","typeArguments":[]}}],"return":[]},"store_cap":{"visibility":"Public","isEntry":false,"typeParameters":[{"abilities":["Store","Key"]}],"parameters":[{"MutableReference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"Operators","typeArguments":[]}}},{"Reference":{"Struct":{"address":"0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7","module":"operators","name":"OwnerCap","typeArguments":[]}}},{"TypeParameter":0}],"return":[]}}}}',
);

export function loadAllTypes(coder: MoveCoder) {
  _0x2.loadAllTypes(coder);
  _0x1.loadAllTypes(coder);
  for (const m of Object.values(MODULES)) {
    coder.load(
      m as any,
      "0xbf6b0b743c01709fc636f41d74dd1db15b140bb6bb7ff4897dcf381cbec58db7",
    );
  }
}

loadAllTypes(defaultMoveCoder());
